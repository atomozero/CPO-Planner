# Generated by Django 4.2.9 on 2025-03-05 20:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cpo_core', '0002_financialprojection_yearlyprojection'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricitySupplyContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('provider', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('base_price_per_kwh', models.DecimalField(decimal_places=5, help_text='Prezzo base per kWh (€)', max_digits=8)),
                ('peak_price_per_kwh', models.DecimalField(decimal_places=5, help_text='Prezzo in orario di punta (€)', max_digits=8)),
                ('fixed_monthly_cost', models.DecimalField(decimal_places=2, help_text='Costo fisso mensile (€)', max_digits=8)),
                ('power_cost_per_kw', models.DecimalField(decimal_places=2, help_text='Costo per kW impegnato (€)', max_digits=8)),
                ('renewable_percentage', models.DecimalField(decimal_places=2, help_text='Percentuale di energia rinnovabile', max_digits=5)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialProjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_investment', models.DecimalField(decimal_places=2, max_digits=12)),
                ('equity_percentage', models.DecimalField(decimal_places=2, default=30.0, help_text='Percentuale di capitale proprio', max_digits=5)),
                ('loan_percentage', models.DecimalField(decimal_places=2, default=70.0, help_text='Percentuale di debito', max_digits=5)),
                ('expected_roi', models.DecimalField(decimal_places=2, help_text='ROI atteso in percentuale', max_digits=5)),
                ('expected_payback_years', models.DecimalField(decimal_places=2, help_text='Tempo di payback atteso in anni', max_digits=5)),
                ('irr', models.DecimalField(decimal_places=2, help_text='Internal Rate of Return (IRR) in percentuale', max_digits=5)),
                ('npv', models.DecimalField(decimal_places=2, help_text='Net Present Value (NPV)', max_digits=12)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=4.0, help_text='Tasso di sconto per calcoli NPV', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financial_projection', to='cpo_core.project')),
            ],
        ),
        migrations.CreateModel(
            name='ExitStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy_type', models.CharField(choices=[('sale', 'Vendita'), ('lease', 'Locazione'), ('partnership', 'Partnership'), ('relocation', 'Ricollocazione'), ('repurpose', 'Riutilizzo'), ('decommission', 'Dismissione')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('trigger_conditions', models.TextField(help_text='Condizioni che attivano questa strategia')),
                ('estimated_recovery_percentage', models.DecimalField(decimal_places=2, help_text="Percentuale stimata di recupero dell'investimento", max_digits=5)),
                ('implementation_cost', models.DecimalField(decimal_places=2, help_text='Costo di implementazione della strategia (€)', max_digits=12)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exit_strategies', to='cpo_core.project')),
            ],
        ),
        migrations.CreateModel(
            name='ChargingStationFinancials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charging_price_per_kwh', models.DecimalField(decimal_places=5, help_text='Prezzo di ricarica per kWh (€)', max_digits=8)),
                ('charging_price_per_minute', models.DecimalField(decimal_places=5, default=0, help_text='Prezzo di ricarica al minuto (€)', max_digits=8)),
                ('session_start_fee', models.DecimalField(decimal_places=2, default=0, help_text='Tariffa iniziale per sessione (€)', max_digits=8)),
                ('estimated_daily_sessions', models.DecimalField(decimal_places=2, help_text='Sessioni giornaliere stimate', max_digits=8)),
                ('estimated_kwh_per_session', models.DecimalField(decimal_places=2, help_text='kWh medi per sessione', max_digits=8)),
                ('estimated_annual_revenue', models.DecimalField(decimal_places=2, help_text='Ricavi annuali stimati (€)', max_digits=12)),
                ('estimated_annual_costs', models.DecimalField(decimal_places=2, help_text='Costi annuali stimati (€)', max_digits=12)),
                ('estimated_annual_profit', models.DecimalField(decimal_places=2, help_text='Profitto annuale stimato (€)', max_digits=12)),
                ('estimated_roi_years', models.DecimalField(decimal_places=2, help_text='Tempo di ROI stimato in anni', max_digits=5)),
                ('annual_maintenance_cost', models.DecimalField(decimal_places=2, help_text='Costo annuale di manutenzione (€)', max_digits=10)),
                ('failure_probability_year', models.DecimalField(decimal_places=2, default=5.0, help_text='Probabilità di guasto annuale (%)', max_digits=5)),
                ('repair_cost_estimate', models.DecimalField(decimal_places=2, help_text='Stima costo riparazione (€)', max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('charging_station', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='financials', to='cpo_core.chargingstation')),
                ('electricity_contract', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stations', to='financial.electricitysupplycontract')),
            ],
        ),
        migrations.CreateModel(
            name='YearlyProjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('ev_market_penetration', models.DecimalField(decimal_places=2, help_text='Penetrazione veicoli elettrici in percentuale', max_digits=5)),
                ('revenue', models.DecimalField(decimal_places=2, help_text='Ricavi totali (€)', max_digits=12)),
                ('operational_costs', models.DecimalField(decimal_places=2, help_text='Costi operativi (€)', max_digits=12)),
                ('maintenance_costs', models.DecimalField(decimal_places=2, help_text='Costi di manutenzione (€)', max_digits=12)),
                ('electricity_costs', models.DecimalField(decimal_places=2, help_text='Costi elettricità (€)', max_digits=12)),
                ('solar_savings', models.DecimalField(decimal_places=2, default=0, help_text='Risparmi da produzione fotovoltaica (€)', max_digits=12)),
                ('loan_payment', models.DecimalField(decimal_places=2, default=0, help_text='Pagamento prestito (€)', max_digits=12)),
                ('depreciation', models.DecimalField(decimal_places=2, help_text='Ammortamento (€)', max_digits=12)),
                ('ebitda', models.DecimalField(decimal_places=2, help_text='EBITDA (€)', max_digits=12)),
                ('ebit', models.DecimalField(decimal_places=2, help_text='EBIT (€)', max_digits=12)),
                ('taxes', models.DecimalField(decimal_places=2, help_text='Tasse (€)', max_digits=12)),
                ('net_profit', models.DecimalField(decimal_places=2, help_text='Utile netto (€)', max_digits=12)),
                ('cash_flow', models.DecimalField(decimal_places=2, help_text='Flusso di cassa (€)', max_digits=12)),
                ('cumulative_cash_flow', models.DecimalField(decimal_places=2, help_text='Flusso di cassa cumulativo (€)', max_digits=12)),
                ('financial_projection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_projections', to='financial.financialprojection')),
            ],
            options={
                'ordering': ['year'],
                'unique_together': {('financial_projection', 'year')},
            },
        ),
        migrations.CreateModel(
            name='StationYearlyProjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('projected_utilization', models.DecimalField(decimal_places=2, help_text='Utilizzo previsto in percentuale', max_digits=5)),
                ('projected_sessions', models.PositiveIntegerField(help_text='Numero sessioni previste')),
                ('projected_kwh_delivered', models.DecimalField(decimal_places=2, help_text='kWh erogati previsti', max_digits=12)),
                ('projected_revenue', models.DecimalField(decimal_places=2, help_text='Ricavi previsti (€)', max_digits=12)),
                ('projected_electricity_cost', models.DecimalField(decimal_places=2, help_text='Costo elettricità previsto (€)', max_digits=12)),
                ('projected_maintenance_cost', models.DecimalField(decimal_places=2, help_text='Costo manutenzione previsto (€)', max_digits=12)),
                ('projected_profit', models.DecimalField(decimal_places=2, help_text='Profitto previsto (€)', max_digits=12)),
                ('failure_simulated', models.BooleanField(default=False, help_text='Se è stato simulato un guasto in questo anno')),
                ('repair_cost', models.DecimalField(decimal_places=2, default=0, help_text='Costo riparazione in caso di guasto (€)', max_digits=10)),
                ('station_financials', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_projections', to='financial.chargingstationfinancials')),
            ],
            options={
                'ordering': ['year'],
                'unique_together': {('station_financials', 'year')},
            },
        ),
    ]
