# Generated by Django 4.2.9 on 2025-03-05 23:30

from django.db import migrations


def transfer_municipality_data(apps, schema_editor):
    """
    Trasferisce i dati dei comuni dall'app infrastructure al modello consolidato in cpo_core
    """
    OldMunicipality = apps.get_model('infrastructure', 'Municipality')
    NewMunicipality = apps.get_model('cpo_core', 'Municipality')
    
    if not NewMunicipality.objects.exists():
        # Trasferisci solo se il modello di destinazione Ã¨ vuoto
        for old_municipality in OldMunicipality.objects.all():
            NewMunicipality.objects.create(
                name=old_municipality.name,
                province=old_municipality.province,
                region=old_municipality.region,
                population=old_municipality.population,
                ev_adoption_rate=old_municipality.ev_adoption_rate
            )


def reverse_municipality_transfer(apps, schema_editor):
    """
    Cancella i dati trasferiti quando la migrazione viene invertita
    """
    NewMunicipality = apps.get_model('cpo_core', 'Municipality')
    NewMunicipality.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('cpo_core', '0003_consolidate_models'),
        ('infrastructure', '0002_municipality_region'),  # Assicurati che esista questa migrazione
    ]

    operations = [
        migrations.RunPython(transfer_municipality_data, reverse_municipality_transfer),
    ]
