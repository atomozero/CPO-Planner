# Generated by Django 4.2.9 on 2025-03-06 19:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0007_subproject_charger_brand_subproject_charger_model_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomMarker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrizione')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Latitudine')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Longitudine')),
                ('color', models.CharField(default='#FF0000', max_length=20, verbose_name='Colore')),
                ('icon', models.CharField(choices=[('marker', 'Marker Standard'), ('charging-station', 'Stazione di Ricarica'), ('car', 'Auto'), ('building', 'Edificio'), ('info', 'Informazioni'), ('warning', 'Avviso'), ('star', 'Stella'), ('flag', 'Bandiera')], default='marker', max_length=50, verbose_name='Icona')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visibile')),
                ('popup_title', models.CharField(blank=True, max_length=255, verbose_name='Titolo Popup')),
                ('popup_content', models.TextField(blank=True, verbose_name='Contenuto Popup')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creazione')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Ultimo Aggiornamento')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_markers', to=settings.AUTH_USER_MODEL, verbose_name='Creato da')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_markers', to='projects.municipality', verbose_name='Sotto-progetto')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_markers', to='projects.project', verbose_name='Progetto')),
            ],
            options={
                'verbose_name': 'Marker Personalizzato',
                'verbose_name_plural': 'Marker Personalizzati',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrizione')),
                ('center_lat', models.FloatField(validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Latitudine Centro')),
                ('center_lng', models.FloatField(validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Longitudine Centro')),
                ('zoom', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(18)], verbose_name='Livello Zoom')),
                ('filters', models.JSONField(default=dict, verbose_name='Filtri')),
                ('is_public', models.BooleanField(default=False, help_text='Se abilitato, la mappa sar√† visibile a tutti gli utenti', verbose_name='Pubblico')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creazione')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Ultimo Aggiornamento')),
                ('charging_stations', models.ManyToManyField(blank=True, related_name='saved_maps', to='projects.chargingstation', verbose_name='Stazioni di Ricarica')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_maps', to=settings.AUTH_USER_MODEL, verbose_name='Creato da')),
                ('custom_markers', models.ManyToManyField(blank=True, related_name='saved_maps', to='mapping.custommarker', verbose_name='Marker Personalizzati')),
                ('projects', models.ManyToManyField(blank=True, related_name='saved_maps', to='projects.project', verbose_name='Progetti')),
                ('subprojects', models.ManyToManyField(blank=True, related_name='saved_maps', to='projects.municipality', verbose_name='Sotto-progetti')),
            ],
            options={
                'verbose_name': 'Mappa Salvata',
                'verbose_name_plural': 'Mappe Salvate',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MapSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrizione')),
                ('default_center_lat', models.FloatField(default=41.9028, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Latitudine Centro')),
                ('default_center_lng', models.FloatField(default=12.4964, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Longitudine Centro')),
                ('default_zoom', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(18)], verbose_name='Zoom Predefinito')),
                ('map_style', models.CharField(choices=[('streets', 'Strade'), ('outdoors', 'Esterni'), ('light', 'Chiaro'), ('dark', 'Scuro'), ('satellite', 'Satellite'), ('satellite-streets', 'Satellite con Strade')], default='streets', max_length=50, verbose_name='Stile Mappa')),
                ('show_clusters', models.BooleanField(default=True, help_text='Raggruppa stazioni vicine in cluster', verbose_name='Mostra Cluster')),
                ('min_cluster_size', models.IntegerField(default=3, help_text='Numero minimo di stazioni per formare un cluster', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(10)], verbose_name='Dimensione Minima Cluster')),
                ('show_planned', models.BooleanField(default=True, verbose_name='Mostra Stazioni Pianificate')),
                ('show_under_construction', models.BooleanField(default=True, verbose_name='Mostra Stazioni in Costruzione')),
                ('show_operational', models.BooleanField(default=True, verbose_name='Mostra Stazioni Operative')),
                ('min_power', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Potenza Minima (kW)')),
                ('max_power', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Potenza Massima (kW)')),
                ('is_default', models.BooleanField(default=False, verbose_name='Impostazioni Predefinite')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data Creazione')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Ultimo Aggiornamento')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_map_settings', to=settings.AUTH_USER_MODEL, verbose_name='Creato da')),
            ],
            options={
                'verbose_name': 'Impostazioni Mappa',
                'verbose_name_plural': 'Impostazioni Mappa',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='mapsettings',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('is_default',), name='unique_default_map_settings'),
        ),
    ]
